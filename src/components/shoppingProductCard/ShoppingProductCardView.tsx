import React, {Fragment} from 'react';import styles from './ShoppingProductCard.module.scss'import cn from 'classnames';import {Alert, Snackbar} from "@mui/material";import {MAX_PRODUCT_QUANTITY, MESSAGE_DISPLAY_DURATION, MIN_PRODUCT_QUANTITY} from "../../constants";import {ShoppingProductCardViewProps} from "./ShoppingProductCard.props";import useShoppingProductCardViewController from "./useShoppingProductCardViewController";const ShoppingProductCardView = (    {product, updateQuantity, deleteCard, restoreCard}: ShoppingProductCardViewProps) => {    const {        isShowAlert,        isSpecialOffer,        increment,        decrement,        handleChange,        closeAlert,    } = useShoppingProductCardViewController({ product, updateQuantity });    return (        <Fragment>            {!product.deleted ?                <div className={styles.productCard}>                    <a className={cn('link', styles.productCard__linkImage)}  href={'/'}>                        {isSpecialOffer &&                            <span className={styles.productCard__highlight}>-{product.cost.discount}%</span>                        }                        <img                            className={styles.productCard__image}                            src={product.image}                            alt={product.title}                        />                    </a>                    <div className={styles.productCard__bodyWrapper}>                        <a className={cn('link', styles.productCard__linkTitle)} href={'/'}>                            <h4 className={styles.productCard__title}>{product.title}</h4>                        </a>                        <div className={styles.cardCounter}>                            <button                                className={cn('button')}                                onClick={decrement}                                disabled={product.cost.quantity <= MIN_PRODUCT_QUANTITY}                            >-</button>                            <input                                value={product.cost.quantity}                                onChange={handleChange}                                min={MIN_PRODUCT_QUANTITY}                                max={MAX_PRODUCT_QUANTITY}                                className={styles.cardCounter__input}                                type={"number"}                            />                            <button                                disabled={product.cost.quantity >= MAX_PRODUCT_QUANTITY}                                className={cn('button')}                                onClick={increment}                            >+</button>                        </div>                    </div>                    <div className={styles.productCard__priceWrapper}>                        {isSpecialOffer &&                            <div className={styles.productCard__discountWrapper}>                                <span className={styles.productCard__totalAmount}>{product.cost.totalAmount}₴</span>                                <span className={styles.productCard__discountAmount}>-{product.cost.discountAmount}₴</span>                            </div>                        }                        <span                            className={styles.productCard__price}                            style={{color: isSpecialOffer ? '#FF4128' : '#121210'}}                        >{isSpecialOffer ? product.cost.totalAmountWithDiscount : product.cost.totalAmount}₴</span>                    </div>                    <button                        className={cn('button', styles.productCard__deleteButton)}                        onClick={() => deleteCard(product.id)}                    >delete</button>                </div>                :                <Snackbar open={isShowAlert} autoHideDuration={MESSAGE_DISPLAY_DURATION} onClose={closeAlert}>                    <Alert onClose={closeAlert} severity="info" sx={{ width: '100%' }}>                        The {product.title} was deleted!                        <button                            className={cn('button', styles.productCard__restoreButton)}                            onClick={() => restoreCard(product.id)}                        >Do you want to restore {product.title}?</button>                    </Alert>                </Snackbar>            }        </Fragment>    );};export default ShoppingProductCardView;